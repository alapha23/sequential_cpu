                            | #######################################################################
                            | # Test for copying block of size 4;
                            | #######################################################################
0x000:                      | 	.pos 0
0x000: 30f47002000000000000 | main:	irmovq Stack, %rsp  	# Set up stack pointer
                            | 
                            | 	# Set up arguments for copy function and then invoke it
0x00a: 30f20400000000000000 | 	irmovq $4, %rdx		# src and dst have 4 elements
0x014: 30f6c801000000000000 | 	irmovq dest, %rsi	# dst array
0x01e: 30f79001000000000000 | 	irmovq src, %rdi	# src array
0x028: 803200000000000000   | 	call ncopy		 
0x031: 00                   | 	halt			# should halt with num nonzeros in %rax
0x032:                      | StartFun:
                            | #/* $begin ncopy-ys */
                            | ##################################################################
                            | # ncopy.ys - Copy a src block of len words to dst.
                            | # Return the number of positive words (>0) contained in src.
                            | #
                            | # Include your name and ID here.
                            | # Gao Zhiyuan
                            | # 2017-81842
                            | #
                            | # Describe how and why you modified the baseline code.
                            | #
                            | ##################################################################
                            | # Do not modify this portion
                            | # Function prologue.
                            | # %rdi = src, %rsi = dst, %rdx = len
0x032:                      | ncopy:
                            | 
                            | ##################################################################
                            | # You can modify this portion
                            | 	# Loop header
0x032: 6300                 | 	xorq %rax, %rax		# count = 0;
0x034: c0f2feffffffffffffff | 	iaddq $-2, %rdx		# len <= 2
0x03e: 712501000000000000   | 	jle Rolling		# if so, goto Rolling:
0x047: c0f2ffffffffffffffff | 	iaddq $-1, %rdx	
0x051:                      | Loop:
0x051: 50a70000000000000000 | 	mrmovq (%rdi), %r10	# read val from src...
0x05b: 40a60000000000000000 | 	rmmovq %r10, (%rsi)	# ...and store it to dst
0x065: c0f70800000000000000 | 	iaddq $8, %rdi
0x06f: c0f60800000000000000 | 	iaddq $8, %rsi
                            | 
0x079: 50b70000000000000000 | 	mrmovq (%rdi), %r11	# read val from src...
0x083: 40b60000000000000000 | 	rmmovq %r11, (%rsi)	# ...and store it to dst
0x08d: c0f70800000000000000 | 	iaddq $8, %rdi
0x097: c0f60800000000000000 | 	iaddq $8, %rsi
                            | 
0x0a1: 50c70000000000000000 | 	mrmovq (%rdi), %r12	# read val from src...
0x0ab: 40c60000000000000000 | 	rmmovq %r12, (%rsi)	# ...and store it to dst
0x0b5: c0f70800000000000000 | 	iaddq $8, %rdi
0x0bf: c0f60800000000000000 | 	iaddq $8, %rsi
                            | 
                            | #	mrmovq (%rdi), %r13	# read val from src...
                            | #	rmmovq %r13, (%rsi)	# ...and store it to dst
                            | #	iaddq $8, %rdi
                            | #	iaddq $8, %rsi
                            | 
0x0c9: 62aa                 | 	andq %r10, %r10		# val <= 0?
0x0cb: 71de00000000000000   | 	jle Npos1		# if so, goto Npos:
0x0d4: c0f00100000000000000 | 	iaddq $1, %rax		# count++
0x0de:                      | Npos1:
0x0de: 62bb                 | 	andq %r11, %r11		# val <= 0?
0x0e0: 71f300000000000000   | 	jle Npos2		# if so, goto Npos:
0x0e9: c0f00100000000000000 | 	iaddq $1, %rax		# count++
0x0f3:                      | Npos2:
0x0f3: 62cc                 | 	andq %r12, %r12		# val <= 0?
0x0f5: 710801000000000000   | 	jle Npos3		# if so, goto Npos:
0x0fe: c0f00100000000000000 | 	iaddq $1, %rax		# count++
0x108:                      | Npos3:
0x108: c0f2fdffffffffffffff | 	iaddq $-3, %rdx		# len >= 3?	
0x112: 765100000000000000   | 	jg Loop		# if so, len -= 3; goto Loop:
0x11b: c0f20100000000000000 | 	iaddq $1, %rdx
                            | 
0x125:                      | Rolling:
0x125: c0f20200000000000000 | 	iaddq $2, %rdx
0x12f: 6222                 | 	andq %rdx, %rdx		# if len <= 0
0x131: 718c01000000000000   | 	jle Done
                            | 
0x13a:                      | RLoop:
0x13a: 50a70000000000000000 | 	mrmovq (%rdi), %r10	
0x144: 40a60000000000000000 | 	rmmovq %r10, (%rsi)
0x14e: 62aa                 | 	andq %r10, %r10
0x150: 716301000000000000   | 	jle Npos
0x159: c0f00100000000000000 | 	iaddq $1, %rax		# counter++
0x163:                      | Npos:
0x163: c0f2ffffffffffffffff | 	iaddq $-1, %rdx		# len--
0x16d: c0f70800000000000000 | 	iaddq $8, %rdi	
0x177: c0f60800000000000000 | 	iaddq $8, %rsi
0x181: 6222                 | 	andq %rdx, %rdx
0x183: 763a01000000000000   | 	jg RLoop
                            | ##################################################################
                            | # Do not modify the following section of code
                            | # Function epilogue.
0x18c:                      | Done:
0x18c: 90                   | 	ret
                            | ##################################################################
                            | # Keep the following label at the end of your function
0x18d:                      | End:
                            | #/* $end ncopy-ys */
0x18d:                      | EndFun:
                            | 
                            | ###############################
                            | # Source and destination blocks 
                            | ###############################
0x190:                      | 	.align 8
0x190:                      | src:
0x190: 0100000000000000     | 	.quad 1
0x198: feffffffffffffff     | 	.quad -2
0x1a0: 0300000000000000     | 	.quad 3
0x1a8: fcffffffffffffff     | 	.quad -4
0x1b0: fadebc0000000000     | 	.quad 0xbcdefa # This shouldn't get moved
                            | 
0x1c0:                      | 	.align 16
0x1c0:                      | Predest:
0x1c0: fadebc0000000000     | 	.quad 0xbcdefa
0x1c8:                      | dest:
0x1c8: abefcd0000000000     | 	.quad 0xcdefab
0x1d0: abefcd0000000000     | 	.quad 0xcdefab
0x1d8: abefcd0000000000     | 	.quad 0xcdefab
0x1e0: abefcd0000000000     | 	.quad 0xcdefab
0x1e8:                      | Postdest:
0x1e8: bcfade0000000000     | 	.quad 0xdefabc
                            | 
0x1f0:                      | .align 8
                            | # Run time stack
0x1f0: 0000000000000000     | 	.quad 0
0x1f8: 0000000000000000     | 	.quad 0
0x200: 0000000000000000     | 	.quad 0
0x208: 0000000000000000     | 	.quad 0
0x210: 0000000000000000     | 	.quad 0
0x218: 0000000000000000     | 	.quad 0
0x220: 0000000000000000     | 	.quad 0
0x228: 0000000000000000     | 	.quad 0
0x230: 0000000000000000     | 	.quad 0
0x238: 0000000000000000     | 	.quad 0
0x240: 0000000000000000     | 	.quad 0
0x248: 0000000000000000     | 	.quad 0
0x250: 0000000000000000     | 	.quad 0
0x258: 0000000000000000     | 	.quad 0
0x260: 0000000000000000     | 	.quad 0
0x268: 0000000000000000     | 	.quad 0
                            | 
0x270:                      | Stack:
